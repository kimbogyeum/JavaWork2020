<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd">

	<!-- 공통기능 클래스를 Bean 객체로 생성하는걸 여기서 해줘야한다. 전단원에서는 Aspect class를 여기다 적어줬었지만 이번엔  Logger를 여기서 만들어줘야해 -->
	<bean id="logger" class="com.lec.beans.Logger"/>
	
	<bean id="service21" class="com.lec.spring.aop02.MyService21"/>
	<bean id="service22" class="com.lec.spring.aop02.MyService22"/>
	
	<aop:config>
		<!--config 안에 aspect 들을 설정. 이게 advisor 역할을 한다.-->
		<aop:aspect id="logAspect1" ref="logger"><!-- ref는 위의 logger 말하는거다 -->
			<!-- aspect의 pointcut 설정 -->
			<aop:pointcut expression="within(com.lec.spring.aop02.*)" id="pc1"/>
			<!-- aspect의 advice 설정 -->
			<aop:before pointcut-ref="pc1" method="logIn"/><!-- pointcut-ref는↑ -->
		</aop:aspect>
		
		<aop:aspect id="logAspect2" ref="logger">
			<aop:after pointcut-ref="pc1" method="logOut"/><!-- pointcut-ref는 위에서 만들어준 pointcut의 id -->
		</aop:aspect>
		
	</aop:config>
	
	
	
	

</beans>
